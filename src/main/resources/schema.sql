--/**
-- * @author Somendra Datta <sodatta@gmail.com>
-- * @version 12/07/25
-- */

CREATE TABLE EVENT_PUBLICATION (
    ID UUID PRIMARY KEY,
    PUBLICATION_DATE TIMESTAMP,
    COMPLETION_DATE TIMESTAMP,
    EVENT_TYPE VARCHAR(255),
    LISTENER_ID VARCHAR(255),
    SERIALIZED_EVENT TEXT
);


-- New table for GeofenceEntity

CREATE TABLE IF NOT EXISTS DL_GEOFENCE (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    POLYGON_COORDINATES TEXT NOT NULL, -- Updated column name
    GEOFENCE_TYPE VARCHAR(50) NOT NULL, -- Updated column name
    NAME VARCHAR(255) NOT NULL,
    ACTIVE BOOLEAN NOT NULL,
    EXTERNAL_ID VARCHAR(50),
    EXTERNAL_SYNC_AT TIMESTAMP,
    IS_DELETED BOOLEAN
);

-- New table for TeamEntity
CREATE TABLE IF NOT EXISTS DL_TEAM (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL UNIQUE,
    DESCRIPTION TEXT,
    ROLE VARCHAR(50) NOT NULL,
    EXTERNAL_ID VARCHAR(50),
    EXTERNAL_SYNC_AT TIMESTAMP,
    IS_DELETED BOOLEAN
);


-- Agent Module##################################################
CREATE TABLE IF NOT EXISTS DL_AGENT (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    STATE VARCHAR(50) NOT NULL, -- Storing enum as VARCHAR
    TEAM_ID BIGINT,
    PHONE_NUMBER VARCHAR(20) NOT NULL UNIQUE,
    UNIQUE_ID VARCHAR(255) NOT NULL UNIQUE,
    JOINING_DATE DATE,
    TERMINATION_DATE DATE,
    DESIGNATION VARCHAR(50),
    EXTERNAL_ID VARCHAR(50),
    EXTERNAL_SYNC_AT TIMESTAMP,
    IS_DELETED BOOLEAN,
    LATITUDE DOUBLE PRECISION,
    LONGITUDE DOUBLE PRECISION,
    ACTIVE INTEGER NOT NULL DEFAULT 0,
    AVAILABLE INTEGER NOT NULL DEFAULT 0,
    BATTERY_LEVEL INTEGER
--    FOREIGN KEY (TEAM_ID) REFERENCES DL_TEAM(ID)
);

-- New table for ManagerEntity
CREATE TABLE IF NOT EXISTS DL_MANAGER (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    CONTACT VARCHAR(255) NOT NULL
);


-- New table for StoreEntity
CREATE TABLE IF NOT EXISTS DL_STORE (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    ADDRESS VARCHAR(255),
    CONTACT_NUMBER VARCHAR(20),
    EMAIL VARCHAR(255),
    MANAGER_ID BIGINT,
    LATITUDE VARCHAR(50),
    LONGITUDE VARCHAR(50)
--    FOREIGN KEY (MANAGER_ID) REFERENCES DL_AGENT(ID)
);


-- New table for CustomerEntity
CREATE TABLE IF NOT EXISTS DL_CUSTOMER (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    SUBSCRIBER_ID VARCHAR(255),
    PHONE_NUMBER VARCHAR(255) NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    EMAIL VARCHAR(255),
    TIME_ZONE VARCHAR(255), -- Changed to VARCHAR
    SUBSCRIBED_TMS TIMESTAMP NOT NULL
);

CREATE TABLE IF NOT EXISTS DL_CUSTOMER_ADDRESS (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CUSTOMER_ID BIGINT NOT NULL,
    ADDRESS_TYPE VARCHAR(50) NOT NULL,
    IS_DEFAULT BOOLEAN NOT NULL,
    FLAT_APARTMENT VARCHAR(255),
    ADDRESS_LINE VARCHAR(255) NOT NULL,
    STREET VARCHAR(255),
    CITY VARCHAR(100),
    STATE VARCHAR(100),
    ZIP_CODE VARCHAR(20),
    COUNTRY VARCHAR(100),
    LONGITUDE VARCHAR(50),
    LATITUDE VARCHAR(50),
    GEOFENCE_ID BIGINT,
    FOREIGN KEY (CUSTOMER_ID) REFERENCES DL_CUSTOMER(ID)
--    FOREIGN KEY (GEOFENCE_ID) REFERENCES DL_GEOFENCE(ID)
);


-- Agent Module##################################################

-- New table for CatalogEntity
CREATE TABLE IF NOT EXISTS DL_CATALOG (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TYPE VARCHAR(50) NOT NULL, -- Stores enum as VARCHAR
    NAME VARCHAR(255) NOT NULL,
    UNIT_TYPE VARCHAR(50) NOT NULL, -- Stores enum as VARCHAR
    UNIT_PRICE DECIMAL(10, 2) NOT NULL
);

-- Table for InvoiceEntity
CREATE TABLE IF NOT EXISTS DL_INVOICE (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    SWIPE_INVOICE_ID VARCHAR(255) UNIQUE,
    ORDER_ID BIGINT NOT NULL,
    CUSTOMER_ID BIGINT NOT NULL,
    INVOICE_DATE TIMESTAMP NOT NULL,
    TOTAL_PRICE DECIMAL(10, 2) NOT NULL,
    TOTAL_TAX DECIMAL(10, 2),
    TOTAL_DISCOUNT DECIMAL(10, 2)
--    FOREIGN KEY (CUSTOMER_ID) REFERENCES DL_CUSTOMER(ID)
);

-- Table for InvoiceItemEntity
CREATE TABLE IF NOT EXISTS DL_INVOICE_ITEM (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    INVOICE_ID BIGINT NOT NULL,
    CATALOG_ID BIGINT NOT NULL,
    QUANTITY INTEGER NOT NULL,
    ITEM_PRICE DECIMAL(10, 2) NOT NULL,
    TAX DECIMAL(10, 2) NOT NULL,
--    FOREIGN KEY (CATALOG_ID) REFERENCES DL_CATALOG(ID),
    FOREIGN KEY (INVOICE_ID) REFERENCES DL_INVOICE(ID) ON DELETE CASCADE
);



-- Updated table for OrderEntity
CREATE TABLE IF NOT EXISTS DL_ORDER (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EXTERNAL_ID VARCHAR(50),
    STORE_ID BIGINT,
    CUSTOMER_ID BIGINT NOT NULL,
    ORDER_DATE TIMESTAMP NOT NULL,
    STATUS VARCHAR(50) NOT NULL,
    TOTAL_AMOUNT DECIMAL(10, 2) NOT NULL
--    FOREIGN KEY (CUSTOMER_ID) REFERENCES DL_CUSTOMER(ID),
--    FOREIGN KEY (STORE_ID) REFERENCES DL_STORE(ID)
);

-- Tables for OrderItemEntity and OrderItemMetadataEntity (unchanged from previous)
CREATE TABLE IF NOT EXISTS DL_ORDER_ITEM (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ORDER_ID BIGINT NOT NULL,
    CATALOG_ID BIGINT NOT NULL,
    QUANTITY DECIMAL(10, 2),
    ITEM_PRICE_AT_ORDER DECIMAL(10, 2) NOT NULL,
    --UNIT_TYPE,
    NOTES TEXT,
    FOREIGN KEY (ORDER_ID) REFERENCES DL_ORDER(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS DL_ORDER_ITEM_METADATA (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ORDER_ITEM_ID BIGINT NOT NULL,
    TYPE VARCHAR(255) NOT NULL,
    ITEM_VALUE TEXT,
    DESCRIPTION TEXT,
    FOREIGN KEY (ORDER_ITEM_ID) REFERENCES DL_ORDER_ITEM(ID) ON DELETE CASCADE
);

-- New table for PaymentEntity
CREATE TABLE IF NOT EXISTS DL_PAYMENT (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ORDER_ID BIGINT NOT NULL,
    CUSTOMER_ID BIGINT NOT NULL,
    TRANSACTION_ID VARCHAR(255) UNIQUE,
    AMOUNT DECIMAL(10, 2) NOT NULL,
    PAYMENT_DATE_TIME TIMESTAMP NOT NULL,
    STATUS VARCHAR(50) NOT NULL,
    METHOD VARCHAR(50) NOT NULL,
    REMARKS TEXT
--    FOREIGN KEY (ORDER_ID) REFERENCES DL_ORDER(ID),
--    FOREIGN KEY (CUSTOMER_ID) REFERENCES DL_CUSTOMER(ID)
);

-- New table for TaskEntity
CREATE TABLE IF NOT EXISTS DL_TASK (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EXTERNAL_ID VARCHAR(50),
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION TEXT,
    TYPE VARCHAR(50) NOT NULL,
    TASK_START_TIME TIMESTAMP,
    TASK_UPDATED_TIME TIMESTAMP,
    TASK_COMPLETED_TIME TIMESTAMP,
    STATUS VARCHAR(50) NOT NULL,
    TEAM_ID BIGINT,
    AGENT_ID BIGINT,
    SOURCE_ADDRESS VARCHAR(255) NOT NULL,
    SOURCE_GEOFENCE_ID BIGINT,
    DESTINATION_ADDRESS VARCHAR(255) NOT NULL,
    DESTINATION_GEOFENCE_ID BIGINT,
    TASK_COMMENT TEXT,
    ORDER_ID BIGINT NOT NULL
--    FOREIGN KEY (TEAM_ID) REFERENCES DL_TEAM(ID),
--    FOREIGN KEY (AGENT_ID) REFERENCES DL_AGENT(ID),
--    FOREIGN KEY (ORDER_ID) REFERENCES DL_ORDER(ID)
);


-- Support Entities
--Agent Module #############
CREATE TABLE IF NOT EXISTS DL_AGENT_TEAM_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    AGENT_ID BIGINT NOT NULL,
    TEAM_ID BIGINT NOT NULL,
    TEAM_NAME VARCHAR(255) NOT NULL,
    TEAM_DESCRIPTION TEXT,
    FOREIGN KEY (AGENT_ID) REFERENCES DL_AGENT(ID)
--    FOREIGN KEY (TEAM_ID) REFERENCES DL_TEAM(ID)
);

CREATE TABLE IF NOT EXISTS DL_AGENT_TASK_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TASK_ID BIGINT NOT NULL,
    AGENT_ID BIGINT NOT NULL,
    TASK_NAME VARCHAR(255) NOT NULL,
    TASK_TYPE VARCHAR(50) NOT NULL,
    TASK_STATUS VARCHAR(50) NOT NULL,
    TASK_START_TIME TIMESTAMP,
    SOURCE_ADDRESS VARCHAR(255),
    DESTINATION_ADDRESS VARCHAR(255),
    ORDER_ID BIGINT,
    FOREIGN KEY (AGENT_ID) REFERENCES DL_AGENT(ID)
--    FOREIGN KEY (TASK_ID) REFERENCES DL_TASK(ID),
--    FOREIGN KEY (ORDER_ID) REFERENCES DL_ORDER(ID)
);

-- Store Module ########
CREATE TABLE IF NOT EXISTS DL_STORE_CATALOG (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    STORE_ID BIGINT NOT NULL,
    CATALOG_ID BIGINT NOT NULL,
    UNIQUE (STORE_ID, CATALOG_ID),
    FOREIGN KEY (STORE_ID) REFERENCES DL_STORE(ID)
--    FOREIGN KEY (CATALOG_ID) REFERENCES DL_CATALOG(ID)
);

-- Customer Module #########
CREATE TABLE IF NOT EXISTS DL_CUSTOMER_ORDER_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ORDER_ID BIGINT NOT NULL UNIQUE, -- The ID from the DL_ORDER table. Unique as each order has one summary.
    CUSTOMER_ID BIGINT NOT NULL, -- The ID from the DL_CUSTOMER table
    ORDER_DATE TIMESTAMP,
    STATUS VARCHAR(50),
    TOTAL_AMOUNT DECIMAL(10, 2),
    STORE_ID BIGINT,
    FOREIGN KEY (CUSTOMER_ID) REFERENCES DL_CUSTOMER(ID)
--    FOREIGN KEY (ORDER_ID) REFERENCES DL_ORDER(ID),
--    FOREIGN KEY (STORE_ID) REFERENCES DL_STORE(ID)
);

-- Geofence Module ########
CREATE TABLE IF NOT EXISTS DL_GEOFENCE_ORDER_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ORDER_ID BIGINT NOT NULL UNIQUE, -- The ID from the DL_ORDER table. Unique as each order has one summary.
    GEOFENCE_ID BIGINT NOT NULL, -- The ID from the DL_GEOFENCE table
    ORDER_DATE TIMESTAMP,
    STATUS VARCHAR(50),
    TOTAL_AMOUNT DECIMAL(10, 2),
    CUSTOMER_ID BIGINT,
    STORE_ID BIGINT,
    FOREIGN KEY (GEOFENCE_ID) REFERENCES DL_GEOFENCE(ID)
--    FOREIGN KEY (ORDER_ID) REFERENCES DL_ORDER(ID),
--    FOREIGN KEY (CUSTOMER_ID) REFERENCES DL_CUSTOMER(ID),
--    FOREIGN KEY (STORE_ID) REFERENCES DL_STORE(ID)
);

CREATE TABLE IF NOT EXISTS DL_GEOFENCE_STORE_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    STORE_ID BIGINT NOT NULL,
    GEOFENCE_ID BIGINT NOT NULL,
    STORE_NAME VARCHAR(255) NOT NULL,
    STORE_ADDRESS TEXT,
    FOREIGN KEY (GEOFENCE_ID) REFERENCES DL_GEOFENCE(ID)
--    FOREIGN KEY (STORE_ID) REFERENCES DL_STORE(ID),
);

CREATE TABLE IF NOT EXISTS DL_GEOFENCE_CUSTOMER_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CUSTOMER_ID BIGINT NOT NULL UNIQUE,
    GEOFENCE_ID BIGINT NOT NULL,
    CUSTOMER_NAME VARCHAR(255) NOT NULL,
    CUSTOMER_PHONE_NUMBER VARCHAR(20),
    FOREIGN KEY (GEOFENCE_ID) REFERENCES DL_GEOFENCE(ID)
--    FOREIGN KEY (CUSTOMER_ID) REFERENCES DL_CUSTOMER(ID),
);

-- Invoice Module ########
CREATE TABLE IF NOT EXISTS DL_INVOICE_CUSTOMER_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    INVOICE_ID BIGINT NOT NULL UNIQUE,
    CUSTOMER_ID BIGINT NOT NULL,
    CUSTOMER_NAME VARCHAR(255) NOT NULL,
    CUSTOMER_PHONE_NUMBER VARCHAR(20),
    CUSTOMER_EMAIL VARCHAR(255),
    FOREIGN KEY (INVOICE_ID) REFERENCES DL_INVOICE(ID)
--    FOREIGN KEY (CUSTOMER_ID) REFERENCES DL_CUSTOMER(ID)
);

CREATE TABLE IF NOT EXISTS DL_INVOICE_ORDER_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    INVOICE_ID BIGINT NOT NULL UNIQUE,
    ORDER_ID BIGINT NOT NULL UNIQUE,
    ORDER_DATE TIMESTAMP,
    STATUS VARCHAR(50),
    TOTAL_AMOUNT DECIMAL(10, 2),
    FOREIGN KEY (INVOICE_ID) REFERENCES DL_INVOICE(ID)
);

CREATE TABLE IF NOT EXISTS DL_INVOICE_PAYMENT_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    INVOICE_ID BIGINT NOT NULL,
    PAYMENT_ID BIGINT NOT NULL UNIQUE,
    PAYMENT_DATE_TIME TIMESTAMP NOT NULL,
    AMOUNT DECIMAL(10, 2) NOT NULL,
    STATUS VARCHAR(50) NOT NULL,
    METHOD VARCHAR(50) NOT NULL,
    TRANSACTION_ID VARCHAR(255),
    FOREIGN KEY (INVOICE_ID) REFERENCES DL_INVOICE(ID)
);

-- Order Modile ########
CREATE TABLE IF NOT EXISTS DL_ORDER_CUSTOMER_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ORDER_ID BIGINT NOT NULL UNIQUE,
    CUSTOMER_ID BIGINT NOT NULL,
    CUSTOMER_NAME VARCHAR(255) NOT NULL,
    CUSTOMER_PHONE_NUMBER VARCHAR(20),
    CUSTOMER_EMAIL VARCHAR(255),
    FOREIGN KEY (ORDER_ID) REFERENCES DL_ORDER(ID)
);

CREATE TABLE IF NOT EXISTS DL_ORDER_STORE_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ORDER_ID BIGINT NOT NULL UNIQUE,
    STORE_ID BIGINT NOT NULL,
    STORE_NAME VARCHAR(255) NOT NULL,
    STORE_ADDRESS TEXT,
    STORE_CONTACT_NUMBER VARCHAR(20),
    STORE_EMAIL VARCHAR(255),
    FOREIGN KEY (ORDER_ID) REFERENCES DL_ORDER(ID)
);

CREATE TABLE IF NOT EXISTS DL_ORDER_TASK_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ORDER_ID BIGINT NOT NULL UNIQUE,
    TASK_ID BIGINT NOT NULL,
    TASK_TYPE VARCHAR(50),
    TASK_STATUS VARCHAR(50),
    TASK_START_TIME TIMESTAMP,
    AGENT_ID BIGINT,
    AGENT_NAME VARCHAR(255),
    FOREIGN KEY (ORDER_ID) REFERENCES DL_ORDER(ID)
);

CREATE TABLE IF NOT EXISTS DL_ORDER_PAYMENT_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ORDER_ID BIGINT NOT NULL,
    PAYMENT_ID BIGINT NOT NULL UNIQUE,
    PAYMENT_DATE_TIME TIMESTAMP NOT NULL,
    AMOUNT DECIMAL(10, 2) NOT NULL,
    STATUS VARCHAR(50) NOT NULL,
    METHOD VARCHAR(50) NOT NULL,
    TRANSACTION_ID VARCHAR(255),
    FOREIGN KEY (ORDER_ID) REFERENCES DL_ORDER(ID)
);

CREATE TABLE IF NOT EXISTS DL_ORDER_INVOICE_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ORDER_ID BIGINT NOT NULL UNIQUE,
    INVOICE_ID BIGINT NOT NULL UNIQUE,
    INVOICE_DATE TIMESTAMP,
    TOTAL_PRICE DECIMAL(10, 2),
    TOTAL_TAX DECIMAL(10, 2),
    TOTAL_DISCOUNT DECIMAL(10, 2),
    FOREIGN KEY (ORDER_ID) REFERENCES DL_ORDER(ID)
);

-- Payment Module #######

CREATE TABLE IF NOT EXISTS DL_PAYMENT_ORDER_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PAYMENT_ID BIGINT NOT NULL UNIQUE,
    ORDER_ID BIGINT NOT NULL,
    ORDER_DATE TIMESTAMP,
    STATUS VARCHAR(50),
    TOTAL_AMOUNT DECIMAL(10, 2),
    CUSTOMER_ID BIGINT NOT NULL,
    STORE_ID BIGINT NOT NULL,
    FOREIGN KEY (PAYMENT_ID) REFERENCES DL_PAYMENT(ID)
);

CREATE TABLE IF NOT EXISTS DL_PAYMENT_CUSTOMER_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PAYMENT_ID BIGINT NOT NULL UNIQUE,
    CUSTOMER_ID BIGINT NOT NULL,
    CUSTOMER_NAME VARCHAR(255) NOT NULL,
    CUSTOMER_PHONE_NUMBER VARCHAR(20),
    CUSTOMER_EMAIL VARCHAR(255),
    FOREIGN KEY (PAYMENT_ID) REFERENCES DL_PAYMENT(ID)
);

CREATE TABLE IF NOT EXISTS DL_PAYMENT_INVOICE_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PAYMENT_ID BIGINT NOT NULL UNIQUE,
    INVOICE_ID BIGINT NOT NULL,
    INVOICE_DATE TIMESTAMP,
    TOTAL_PRICE DECIMAL(10, 2),
    TOTAL_TAX DECIMAL(10, 2),
    TOTAL_DISCOUNT DECIMAL(10, 2),
    FOREIGN KEY (PAYMENT_ID) REFERENCES DL_PAYMENT(ID)
);

-- Store Module #######
CREATE TABLE IF NOT EXISTS DL_STORE_ORDER_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    STORE_ID BIGINT NOT NULL,
    ORDER_ID BIGINT NOT NULL UNIQUE,
    ORDER_DATE TIMESTAMP,
    STATUS VARCHAR(50),
    TOTAL_AMOUNT DECIMAL(10, 2),
    CUSTOMER_ID BIGINT NOT NULL,
    FOREIGN KEY (STORE_ID) REFERENCES DL_STORE(ID)
);

CREATE TABLE IF NOT EXISTS DL_STORE_AGENT_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    STORE_ID BIGINT NOT NULL,
    AGENT_ID BIGINT NOT NULL UNIQUE,
    AGENT_NAME VARCHAR(255) NOT NULL,
    AGENT_PHONE_NUMBER VARCHAR(20),
    AGENT_DESIGNATION VARCHAR(50),
    AGENT_STATUS VARCHAR(50),
    FOREIGN KEY (STORE_ID) REFERENCES DL_STORE(ID)
);

CREATE TABLE IF NOT EXISTS DL_STORE_TASK_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    STORE_ID BIGINT NOT NULL,
    TASK_ID BIGINT NOT NULL UNIQUE,
    TASK_TYPE VARCHAR(50),
    TASK_STATUS VARCHAR(50),
    TASK_START_TIME TIMESTAMP,
    AGENT_ID BIGINT,
    AGENT_NAME VARCHAR(255),
    ORDER_ID BIGINT NOT NULL,
    FOREIGN KEY (STORE_ID) REFERENCES DL_STORE(ID)
);

CREATE TABLE IF NOT EXISTS DL_STORE_GEOFENCE_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    STORE_ID BIGINT NOT NULL,
    GEOFENCE_ID BIGINT NOT NULL UNIQUE,
    GEOFENCE_EXTERNAL_ID VARCHAR(255),
    GEOFENCE_NAME VARCHAR(255) NOT NULL,
    GEOFENCE_TYPE VARCHAR(50),
    ACTIVE BOOLEAN NOT NULL,
    FOREIGN KEY (STORE_ID) REFERENCES DL_STORE(ID)
);

-- Task Module #######
CREATE TABLE IF NOT EXISTS DL_TASK_ORDER_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TASK_ID BIGINT NOT NULL UNIQUE,
    ORDER_ID BIGINT NOT NULL,
    ORDER_DATE TIMESTAMP,
    STATUS VARCHAR(50),
    TOTAL_AMOUNT DECIMAL(10, 2),
    CUSTOMER_ID BIGINT NOT NULL,
    STORE_ID BIGINT,
    FOREIGN KEY (TASK_ID) REFERENCES DL_TASK(ID)
);

CREATE TABLE IF NOT EXISTS DL_TASK_AGENT_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TASK_ID BIGINT NOT NULL UNIQUE,
    AGENT_ID BIGINT NOT NULL,
    AGENT_NAME VARCHAR(255) NOT NULL,
    AGENT_PHONE_NUMBER VARCHAR(20),
    AGENT_DESIGNATION VARCHAR(50),
    AGENT_STATE VARCHAR(50),
    FOREIGN KEY (TASK_ID) REFERENCES DL_TASK(ID)
);

CREATE TABLE IF NOT EXISTS DL_TASK_GEOFENCE_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TASK_ID BIGINT NOT NULL,
    GEOFENCE_ID BIGINT NOT NULL,
    GEOFENCE_NAME VARCHAR(255) NOT NULL,
    GEOFENCE_TYPE VARCHAR(50),
    POLYGON_COORDINATES TEXT,
    IS_SOURCE BOOLEAN NOT NULL,
    IS_DESTINATION BOOLEAN NOT NULL,
    UNIQUE(TASK_ID, GEOFENCE_ID),
    FOREIGN KEY (TASK_ID) REFERENCES DL_TASK(ID)
);

CREATE TABLE IF NOT EXISTS DL_TASK_TEAM_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TASK_ID BIGINT NOT NULL UNIQUE,
    TEAM_ID BIGINT NOT NULL,
    TEAM_NAME VARCHAR(255) NOT NULL,
    TEAM_DESCRIPTION TEXT,
    TEAM_ROLE VARCHAR(50),
    FOREIGN KEY (TASK_ID) REFERENCES DL_TASK(ID)
);

-- Team Module #######
CREATE TABLE IF NOT EXISTS DL_TEAM_AGENT_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TEAM_ID BIGINT NOT NULL,
    AGENT_ID BIGINT NOT NULL UNIQUE,
    AGENT_NAME VARCHAR(255) NOT NULL,
    AGENT_PHONE_NUMBER VARCHAR(20),
    AGENT_DESIGNATION VARCHAR(50),
    AGENT_STATE VARCHAR(50),
    FOREIGN KEY (TEAM_ID) REFERENCES DL_TEAM(ID)
);

CREATE TABLE IF NOT EXISTS DL_TEAM_TASK_SUMMARY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TEAM_ID BIGINT NOT NULL,
    TASK_ID BIGINT NOT NULL UNIQUE,
    TASK_TYPE VARCHAR(50),
    TASK_STATUS VARCHAR(50),
    TASK_START_TIME TIMESTAMP,
    AGENT_ID BIGINT,
    AGENT_NAME VARCHAR(255),
    ORDER_ID BIGINT NOT NULL,
    FOREIGN KEY (TEAM_ID) REFERENCES DL_TEAM(ID)
);

-- Catalog Module #######
CREATE TABLE IF NOT EXISTS DL_CATALOG_STORE_OFFERING_SUMMARY (
     ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
     CATALOG_ID BIGINT NOT NULL,
     CATALOG_NAME VARCHAR(255) NOT NULL,
     CATALOG_TYPE VARCHAR(50),
     UNIT_TYPE VARCHAR(50),
     UNIT_PRICE DECIMAL(10, 2),
     STORE_ID BIGINT NOT NULL,
     STORE_NAME VARCHAR(255),
     STORE_SPECIFIC_PRICE DECIMAL(10, 2),
     EFFECTIVE_FROM DATE,
     EFFECTIVE_TO DATE,
     ACTIVE BOOLEAN NOT NULL,
     UNIQUE(CATALOG_ID, STORE_ID),
     FOREIGN KEY (CATALOG_ID) REFERENCES DL_CATALOG(ID)
 );

 CREATE TABLE IF NOT EXISTS DL_CATALOG_ORDER_ITEM_SUMMARY (
     ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
     CATALOG_ID BIGINT NOT NULL,
     CATALOG_NAME VARCHAR(255) NOT NULL,
     CATALOG_TYPE VARCHAR(50),
     UNIT_TYPE VARCHAR(50),
     ORDER_ID BIGINT NOT NULL,
     ORDER_ITEM_ID BIGINT NOT NULL UNIQUE,
     QUANTITY INTEGER,
     ITEM_PRICE_AT_ORDER DECIMAL(10, 2),
     ORDER_DATE TIMESTAMP,
     FOREIGN KEY (CATALOG_ID) REFERENCES DL_CATALOG(ID)
 );


 --Sync with Tookan
 CREATE TABLE IF NOT EXISTS DL_SYNC_RUN (
    ID BIGSERIAL PRIMARY KEY,
    ENTITY_TYPE VARCHAR(32) NOT NULL,
    MODE VARCHAR(16) NOT NULL,
    STARTED_AT TIMESTAMP NOT NULL,
    FINISHED_AT TIMESTAMP,
    STATUS VARCHAR(16) NOT NULL,
    COUNTS_JSON TEXT,
    ERROR_SAMPLE TEXT
 );